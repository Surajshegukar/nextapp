generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:@localhost:3306/nextdemo"
}

model Department {
  id               Int          @id @default(autoincrement())
  department_name  String       @db.VarChar(50)

  // 1 = ACTIVE, 0 = INACTIVE
  status           Int          @default(1)

  // 0 = NOT_DELETED, 1 = DELETED
  is_deleted       Int          @default(0)

  created_on       DateTime     @default(now())
  updated_on       DateTime     @updatedAt
  Designations     Designation[]
  Users            User[]       @relation("UserDepartment")
}

model Category {
  id               Int          @id @default(autoincrement())
  category_name  String       @db.VarChar(50)

  // 1 = ACTIVE, 0 = INACTIVE
  status           Int          @default(1)

  // 0 = NOT_DELETED, 1 = DELETED
  is_deleted       Int          @default(0)

  created_on       DateTime     @default(now())
  updated_on       DateTime     @updatedAt
}

model Designation {
  id               Int          @id @default(autoincrement())
  designation_name String       @db.VarChar(50)
  status           Int          @default(1)
  is_deleted       Int          @default(0)
  created_on       DateTime     @default(now())
  updated_on       DateTime     @updatedAt
  departmentId     Int
  Department       Department   @relation(fields: [departmentId], references: [id])
  Users            User[]       @relation("UserDesignation")
}

model User {
  id              Int          @id @default(autoincrement())
  first_name      String       @db.VarChar(100)
  middle_name     String?      @db.VarChar(100)
  last_name       String       @db.VarChar(100)
  role            String       @default("USER") @db.VarChar(20)
  dob             DateTime?    @db.Date
  username        String       @db.VarChar(100)
  email           String       @unique
  password        String
  status          Int          @default(1)     // 1 = ACTIVE, 0 = INACTIVE
  is_deleted      Int          @default(0)     // 0 = NOT_DELETED, 1 = DELETED
  created_on      DateTime     @default(now())
  updated_on      DateTime     @updatedAt

  department_id   Int
  designation_id  Int

  department      Department   @relation("UserDepartment", fields: [department_id], references: [id])
  designation     Designation  @relation("UserDesignation", fields: [designation_id], references: [id])
}

model Magazine {
  id               Int      @id @default(autoincrement())
  magazine_name    String
  category         String?
  publish_date     DateTime?
  auther           String?
  short_description String?
  duration         Int?
  image            String?
    status          Int          @default(1)     // 1 = ACTIVE, 0 = INACTIVE
  is_deleted      Int          @default(0)     // 0 = NOT_DELETED, 1 = DELETED
  created_on      DateTime     @default(now())
  updated_on      DateTime     @updatedAt
}
